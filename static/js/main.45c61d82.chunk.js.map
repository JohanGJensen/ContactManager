{"version":3,"sources":["Context.js","component/contacts/Contact.js","component/contacts/Contacts.js","component/layout/Header.js","component/pages/About.js","component/pages/NotFound.js","component/layout/TextInputGroup.js","component/contacts/AddContact.js","component/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","deleteContact","newContacts","Fragment","contacts_Contact","deleteClickHandler","Header","branding","href","defaultProps","About","NotFound","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","PropTypes","string","isRequired","func","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","App","Context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.45c61d82.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case \"DELETE_CONTACT\":\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            }\r\n            case \"ADD_CONTACT\":\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            }\r\n            case \"UPDATE_CONTACT\":\r\n                return {\r\n                    ...state,\r\n                    contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\r\n                }\r\n            default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [\r\n            \r\n        ],\r\n        dispatch: action => \r\n            this.setState(state => reducer(state, action))\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n        \r\n        this.setState({contacts: res.data});\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../Context\";\r\nimport axios from \"axios\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    } catch (e) {\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{\" \"}\r\n                <i\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    })\r\n                  }\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i \r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\",\r\n                      marginRight: \"1rem\"\r\n                    }}\r\n                    />\r\n                </Link>\r\n\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from \"./Contact\";\r\nimport {Consumer} from \"../../Context\";\r\n\r\nclass Contacts extends Component {\r\n\r\n        deleteContact = id => {\r\n            const {contacts} = this.state;\r\n\r\n            const newContacts = contacts.filter(contact => contact.id !== id);\r\n\r\n            this.setState({\r\n                contacts: newContacts\r\n            });\r\n        };\r\n\r\n  render() {\r\n\r\n      return (\r\n          <Consumer>\r\n              {value => {\r\n                  const {contacts} = value;\r\n\r\n                  return (\r\n                      <React.Fragment>\r\n                          <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact</span> List</h1>\r\n                          {contacts.map(contact => (\r\n                              <Contact key={contact.id} contact={contact} deleteClickHandler={this.deleteContact.bind(this, contact.id)} />\r\n                          ))}\r\n                      </React.Fragment>\r\n                  )\r\n              }}\r\n          </Consumer>\r\n      )\r\n  }\r\n}\r\n\r\nexport default Contacts;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n               <i className=\"fas fa-home\" /> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n              <i className=\"fas fa-plus\" /> Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n              <i className=\"fas fa-question\" /> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"Contact Manager\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n      <p className=\"lead\">Sorry, Page not found!</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        name={name}\r\n        type={type}\r\n        className={classnames(\"form-control form-control-lg\", {\"is-invalid\": error})}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.PropTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: \"text\"\r\n}\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport {Consumer} from \"../../Context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        errors: {}\r\n    };\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        \r\n        const {name, email, phone} = this.state;\r\n\r\n        //Check for errors\r\n        if(name === \"\") {\r\n            this.setState({errors: { name: \"Name is required\"}});\r\n            return;\r\n        }\r\n        if(email === \"\") {\r\n            this.setState({errors: { email: \"Email is required\"}});\r\n            return;\r\n        }\r\n        if(phone === \"\") {\r\n            this.setState({errors: { phone: \"Phone is required\"}});\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n\r\n        const res = await axios.post(\"https://jsonplaceholder.typicode.com/users\", newContact)\r\n        \r\n        dispatch({ type: \"ADD_CONTACT\", payload: res.data})\r\n\r\n        this.setState({\r\n            name: \"\",\r\n            email: \"\",\r\n            phone: \"\",\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push(\"/\");\r\n    };\r\n\r\n    onChange = e =>\r\n        this.setState({ [e.target.name]: e.target.value});\r\n    \r\n\r\n  render() {\r\n    const {name, email, phone, errors} = this.state;\r\n\r\n    return (\r\n        <Consumer>\r\n            {value => {\r\n                const {dispatch} = value;\r\n                return (\r\n                    <div className=\"card mb-3\">\r\n        <div className=\"card-header\">Add Contact</div>\r\n        <div className=\"card-body\">\r\n            <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n               <TextInputGroup \r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n               />\r\n               <TextInputGroup \r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n               />\r\n               <TextInputGroup \r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n               />\r\n                <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-block btn-light\"/>\r\n            </form>\r\n        </div>\r\n      </div> \r\n                )\r\n            }}\r\n        </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddContact;","import React, { Component } from 'react';\r\nimport {Consumer} from \"../../Context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        errors: {}\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const {id} = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n        const contact = res.data;\r\n\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone   \r\n        });\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        \r\n        const {name, email, phone} = this.state;\r\n\r\n        //Check for errors\r\n        if(name === \"\") {\r\n            this.setState({errors: { name: \"Name is required\"}});\r\n            return;\r\n        }\r\n        if(email === \"\") {\r\n            this.setState({errors: { email: \"Email is required\"}});\r\n            return;\r\n        }\r\n        if(phone === \"\") {\r\n            this.setState({errors: { phone: \"Phone is required\"}});\r\n            return;\r\n        }\r\n\r\n        const updContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const {id} = this.props.match.params;\r\n\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n\r\n        dispatch({type:\"UPDATE_CONTACT\", payload: res.data});\r\n\r\n        this.setState({\r\n            name: \"\",\r\n            email: \"\",\r\n            phone: \"\",\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push(\"/\");\r\n    };\r\n\r\n    onChange = e =>\r\n        this.setState({ [e.target.name]: e.target.value});\r\n    \r\n\r\n  render() {\r\n    const {name, email, phone, errors} = this.state;\r\n\r\n    return (\r\n        <Consumer>\r\n            {value => {\r\n                const {dispatch} = value;\r\n                return (\r\n                    <div className=\"card mb-3\">\r\n        <div className=\"card-header\">Edit Contact</div>\r\n        <div className=\"card-body\">\r\n            <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n               <TextInputGroup \r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n               />\r\n               <TextInputGroup \r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n               />\r\n               <TextInputGroup \r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter phone\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n               />\r\n                <input type=\"submit\" value=\"Edit Contact\" className=\"btn btn-block btn-light\"/>\r\n            </form>\r\n        </div>\r\n      </div> \r\n                )\r\n            }}\r\n        </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditContact;","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./component/contacts/Contacts\";\nimport Header from \"./component/layout/Header\";\nimport About from \"./component/pages/About\";\nimport NotFound from \"./component/pages/NotFound\";\nimport { Provider } from \"./Context\";\nimport AddContact from \"./component/contacts/AddContact\";\nimport EditContact from \"./component/contacts/EditContact\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            <div className=\"container\">\n              <Switch>\n                <Route  exact path=\"/\" component= {Contacts} />\n                <Route  exact path=\"/contact/add\" component= {AddContact} \n                />\n                <Route exact path=\"/contact/edit/:id\" component= {EditContact} />\n                <Route  exact path=\"/about\" component= {About} />\n                <Route  component= {NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}